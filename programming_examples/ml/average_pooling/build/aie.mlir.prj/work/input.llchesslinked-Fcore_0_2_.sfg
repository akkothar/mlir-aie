
// File generated by noodle version U-2022.12#3eec2545bc#230622, Fri Jul 12 14:51:59 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I/proj/xbuilds/2023.2_INT_1013_2256/installs/all_platforms/Vitis/2023.2/aietools/data/aie_ml/lib -I/proj/xbuilds/2023.2_INT_1013_2256/installs/all_platforms/Vitis/2023.2/aietools/data/aie_ml/lib/isg -I/proj/xbuilds/2023.2_INT_1013_2256/installs/all_platforms/Vitis/2023.2/aietools/data/aie_ml/lib/runtime_cxx/libcxx-lite/include -I/proj/xbuilds/2023.2_INT_1013_2256/installs/all_platforms/Vitis/2023.2/aietools/data/aie_ml/lib/runtime_cxx/libs/libcxx-9.0.0/include-lite -I/proj/xbuilds/2023.2_INT_1013_2256/installs/all_platforms/Vitis/2023.2/aietools/data/aie_ml/lib/runtime/include -I<BOOST_DIR> -D__AIENGINE__ -D__AIE_ARCH__=20 -D__AIEARCH__=20 -D__tct_tgt__=230622 -iaie_core.h +Sinl +Olbb=200 +Opmsa +NOpld +w/scratch/gagandee/mlir-aie_asplos_GIT_NEW_KRISTOF/programming_examples/ml/average_pooling/build/aie.mlir.prj/work /scratch/gagandee/mlir-aie_asplos_GIT_NEW_KRISTOF/programming_examples/ml/average_pooling/build/aie.mlir.prj/work/input.llchesslinked.sfg +Q1=+Sinl,+Olbb=200,+Opmsa,+NOpld +Q2=+Sinl,+Olbb=200,+Opmsa,+NOpld +Q3=+Sinl,+Olbb=1000,+Opmsa,+NOpld +Qfast=+Sinl,+Olbb=1000,+Opmsa,+NOpld,+Opfp +Qs=+Sinl,+Olbb=200,+Opmsa,+NOpld +Qz=+Sinl,+Olbb=200,+Opmsa,+NOpld me


/***
!!  void core_0_2()
Fcore_0_2 : user_defined, called {
    fnm : "core_0_2" 'void core_0_2()';
    arg : ( addr:i );
    loc : ( LR[0] );
    flc : ( P[6] P[7] R[16] R[17] R[18] R[19] R[20] R[21] R[22] R[23] );
    vac : ( crMCDEn[0] crPackSign[0] crSCDEn[0] crSRSSign[0] crUPSSign[0] crUnpackSign[0] crVaddSign[0] );
    frm : ( );
}
****
!!  void llvm___aie2___acquire(unsigned, unsigned)
Fllvm___aie2___acquire : user_defined, called {
    fnm : "llvm___aie2___acquire" 'void llvm___aie2___acquire(unsigned, unsigned)';
    arg : ( addr:i w32:i w32:i );
    loc : ( LR[0] R[0] R[1] );
    flc : ( P[6] P[7] R[16] R[17] R[18] R[19] R[20] R[21] R[22] R[23] );
    vac : ( crMCDEn[0] crPackSign[0] crSCDEn[0] crSRSSign[0] crUPSSign[0] crUnpackSign[0] crVaddSign[0] );
}
!!  void average_pooling(void *, void *, unsigned, unsigned, unsigned, unsigned)
Faverage_pooling : user_defined, called {
    fnm : "average_pooling" 'void average_pooling(void *, void *, unsigned, unsigned, unsigned, unsigned)';
    arg : ( addr:i addr:i addr:i w32:i w32:i w32:i w32:i );
    loc : ( LR[0] P[0] P[1] R[0] R[1] R[2] R[3] );
    flc : ( P[6] P[7] R[16] R[17] R[18] R[19] R[20] R[21] R[22] R[23] );
    vac : ( crMCDEn[0] crPackSign[0] crSCDEn[0] crSRSSign[0] crUPSSign[0] crUnpackSign[0] crVaddSign[0] );
}
!!  void llvm___aie2___release(unsigned, unsigned)
Fllvm___aie2___release : user_defined, called {
    fnm : "llvm___aie2___release" 'void llvm___aie2___release(unsigned, unsigned)';
    arg : ( addr:i w32:i w32:i );
    loc : ( LR[0] R[0] R[1] );
    flc : ( P[6] P[7] R[16] R[17] R[18] R[19] R[20] R[21] R[22] R[23] );
    vac : ( crMCDEn[0] crPackSign[0] crSCDEn[0] crSRSSign[0] crUPSSign[0] crUnpackSign[0] crVaddSign[0] );
}
***/

[
    0 : core_0_2 typ=iword bnd=e stl=PM
    5 : _cst typ=amod val=49f bnd=m
    6 : _cst typ=amod val=-1f bnd=m
    9 : _cst typ=amod val=50f bnd=m
   15 : _cst typ=amod val=256f bnd=m
   16 : _cst typ=u4 val=7f bnd=m
   18 : _cst typ=amod val=48f bnd=m
   19 : _cst typ=u4 val=1f bnd=m
   21 : _cst typ=amod val=51f bnd=m
   24 : __tmp typ=bool bnd=m
   26 : __ext typ=w8 bnd=b stl=DMb
   27 : __vola typ=iword bnd=b stl=PM
   29 : __ct typ=addr bnd=m
   30 : __ct typ=addr bnd=m
   31 : __la typ=addr bnd=p
   32 : llvm___aie2___acquire typ=addr val=0r bnd=m
   33 : __link typ=addr bnd=m
   34 : _cst typ=w32 bnd=m
   35 : _cst typ=w32 bnd=m
   36 : __link typ=addr bnd=m
   37 : _cst typ=w32 bnd=m
   38 : _cst typ=w32 bnd=m
   39 : average_pooling typ=addr val=0r bnd=m
   40 : __link typ=addr bnd=m
   41 : _cst typ=w32 bnd=m
   42 : _cst typ=w32 bnd=m
   43 : _cst typ=w32 bnd=m
   44 : _cst typ=w32 bnd=m
   45 : llvm___aie2___release typ=addr val=0r bnd=m
   46 : __link typ=addr bnd=m
   47 : _cst typ=w32 bnd=m
   48 : _cst typ=w32 bnd=m
   49 : __link typ=addr bnd=m
   50 : _cst typ=w32 bnd=m
   51 : _cst typ=w32 bnd=m
  122 : __R_LC typ=w32 bnd=d stl=LC
  123 : __R_LE typ=addr bnd=d stl=LE
  124 : __R_LS typ=addr bnd=d stl=LS
  142 : __ct_0 typ=u1 val=0f bnd=m
  143 : __ct_1 typ=u1 val=1f bnd=m
  148 : __R_SP typ=addr bnd=d stl=SP
  149 : __sp typ=addr bnd=b stl=SP
  150 : __rd___sp typ=addr bnd=m
  151 : __wr___sp typ=addr bnd=m
  152 : __rd___sp typ=addr bnd=m
  154 : __wr___sp typ=addr bnd=m
  155 : act_L2_02_cons_buff_0 typ=w8 bnd=e sz=12544 algn=1 stl=DMb
  157 : __ptr_act_L2_02_cons_buff_0 typ=addr val=0a bnd=m adro=155
  158 : out_02_L2_buff_0 typ=w8 bnd=e sz=256 algn=1 stl=DMb
  160 : __ptr_out_02_L2_buff_0 typ=addr val=0a bnd=m adro=158
  175 : __apl_carry typ=u1 bnd=m tref=u1__
  176 : __apl_carry2 typ=u1 bnd=m tref=u1__
  177 : __ct_0 typ=u4 val=0f bnd=m
  180 : __apl_r_high typ=w32 bnd=m tref=__sint__
  183 : __tmp typ=w32 bnd=m
  188 : __tmp_low typ=w32 bnd=m
  189 : __tmp_high typ=w32 bnd=m
  196 : __tmp typ=bool bnd=m
  197 : __tmp typ=bool bnd=m
  213 : __ct_0s0 typ=amod val=0s0 bnd=m
  214 : __ct_0S0 typ=amod val=0S0 bnd=m
  224 : __ct_2147483647 typ=w32 val=2147483647f bnd=m
  235 : __either typ=bool bnd=m
  236 : __trgt typ=addr val=0J bnd=m
]
Fcore_0_2 {
    #387 off=0
    (_cst.6 var=5) const ()  <6>;
    (_cst.7 var=6) const ()  <7>;
    (_cst.11 var=9) const ()  <11>;
    (_cst.21 var=15) const ()  <21>;
    (_cst.22 var=16) const ()  <22>;
    (_cst.26 var=18) const ()  <26>;
    (_cst.27 var=19) const ()  <27>;
    (_cst.31 var=21) const ()  <31>;
    (__ext.42 var=26) source ()  <46>;
    (__vola.43 var=27) source ()  <48>;
    (__la.47 var=31 stl=LR off=0) inp ()  <54>;
    (__la.48 var=31) deassign (__la.47)  <55>;
    (llvm___aie2___acquire.49 var=32) const ()  <57>;
    (average_pooling.58 var=39) const ()  <69>;
    (llvm___aie2___release.67 var=45) const ()  <80>;
    (__ct_0.248 var=142) const ()  <317>;
    (__ct_1.250 var=143) const ()  <319>;
    (__R_SP.266 var=148) st_def ()  <331>;
    (__sp.267 var=149) source ()  <332>;
    (__rd___sp.268 var=150) rd_res_reg (__R_SP.266 __sp.267)  <333>;
    (__R_SP.270 var=148 __sp.271 var=149) wr_res_reg (__wr___sp.331 __sp.267)  <335>;
    (__rd___sp.272 var=152) rd_res_reg (__R_SP.266 __sp.271)  <336>;
    (__ptr_act_L2_02_cons_buff_0.277 var=157) const ()  <342>;
    (__ptr_out_02_L2_buff_0.278 var=160) const ()  <344>;
    (__ct_0.289 var=177) const ()  <429>;
    (__wr___sp.331 var=151) __Pvoid_add___Pvoid_amod (__rd___sp.268 __ct_0s0.340)  <479>;
    (__ct_0s0.340 var=213) const ()  <516>;
    (__ct_2147483647.366 var=224) const ()  <552>;
    (__trgt.377 var=236) const ()  <632>;
    do {
        {
            (__ext.111 var=26) entry (__ext.78 __ext.42)  <120>;
            (__vola.112 var=27) entry (__vola.80 __vola.43)  <121>;
            (__tmp_low.359 var=188) entry (__tmp_low.357 __ct_0.289)  <545>;
            (__tmp_high.364 var=189) entry (__tmp_high.362 __ct_0.289)  <549>;
        } #4
        {
            #17 off=1
            (__link.50 var=33) addr_jal_addr (llvm___aie2___acquire.49)  <59>;
            call {
                (__ext.252 var=26 __vola.253 var=27) Fllvm___aie2___acquire (__link.51 _cst.52 _cst.53 __ext.111 __vola.112)  <60>;
                (__link.51 var=33 stl=LR off=0) assign (__link.50)  <61>;
                (_cst.52 var=34 stl=R off=0) assign (_cst.6)  <62>;
                (_cst.53 var=35 stl=R off=1) assign (_cst.7)  <63>;
            } #18 off=2
            #19 off=3
            (__link.54 var=36) addr_jal_addr (llvm___aie2___acquire.49)  <64>;
            call {
                (__ext.254 var=26 __vola.255 var=27) Fllvm___aie2___acquire (__link.55 _cst.56 _cst.57 __ext.252 __vola.253)  <65>;
                (__link.55 var=36 stl=LR off=0) assign (__link.54)  <66>;
                (_cst.56 var=37 stl=R off=0) assign (_cst.11)  <67>;
                (_cst.57 var=38 stl=R off=1) assign (_cst.7)  <68>;
            } #20 off=4
            #21 off=5
            (__link.59 var=40) addr_jal_addr (average_pooling.58)  <71>;
            call {
                (__ext.256 var=26 __vola.257 var=27) Faverage_pooling (__link.60 __ct.61 __ct.62 _cst.63 _cst.64 _cst.65 _cst.66 __ext.254 __vola.255)  <72>;
                (__link.60 var=40 stl=LR off=0) assign (__link.59)  <73>;
                (__ct.61 var=29 stl=P off=0) assign (__ptr_act_L2_02_cons_buff_0.277)  <74>;
                (__ct.62 var=30 stl=P off=1) assign (__ptr_out_02_L2_buff_0.278)  <75>;
                (_cst.63 var=41 stl=R off=0) assign (_cst.22)  <76>;
                (_cst.64 var=42 stl=R off=1) assign (_cst.22)  <77>;
                (_cst.65 var=43 stl=R off=2) assign (_cst.21)  <78>;
                (_cst.66 var=44 stl=R off=3) assign (_cst.22)  <79>;
            } #22 off=6
            #23 off=7
            (__link.68 var=46) addr_jal_addr (llvm___aie2___release.67)  <82>;
            call {
                (__ext.258 var=26 __vola.259 var=27) Fllvm___aie2___release (__link.69 _cst.70 _cst.71 __ext.256 __vola.257)  <83>;
                (__link.69 var=46 stl=LR off=0) assign (__link.68)  <84>;
                (_cst.70 var=47 stl=R off=0) assign (_cst.26)  <85>;
                (_cst.71 var=48 stl=R off=1) assign (_cst.27)  <86>;
            } #24 off=8
            #25 off=9
            (__link.72 var=49) addr_jal_addr (llvm___aie2___release.67)  <87>;
            call {
                (__ext.260 var=26 __vola.261 var=27) Fllvm___aie2___release (__link.73 _cst.74 _cst.75 __ext.258 __vola.259)  <88>;
                (__link.73 var=49 stl=LR off=0) assign (__link.72)  <89>;
                (_cst.74 var=50 stl=R off=0) assign (_cst.31)  <90>;
                (_cst.75 var=51 stl=R off=1) assign (_cst.27)  <91>;
            } #26 off=10
            #348 off=11
            (__tmp.296 var=183 __apl_carry.297 var=175) __sint_add___sint___sint_u1 (__tmp_low.359 _cst.27)  <438>;
            (__apl_r_high.298 var=180 __apl_carry2.299 var=176) __sint_addx___sint___sint_u1_u1 (__tmp_high.364 __ct_0.289 __apl_carry.297)  <439>;
            (__tmp.319 var=196) bool__ne___sint___sint (__apl_r_high.298 __ct_2147483647.366)  <463>;
            (__tmp.321 var=197) bool__ne___uint___uint (__tmp.296 _cst.7)  <466>;
            (__tmp.353 var=24) bool_lor_bool_bool (__tmp.319 __tmp.321)  <538>;
            (__tmp.376 var=24) bool_nez_w32 (__tmp.353)  <631>;
            () void_ba_bool_addr (__tmp.376 __trgt.377)  <633>;
            (__either.378 var=235) undefined ()  <634>;
        } #5
        {
            () while_expr (__either.378)  <42>;
            (__ext.78 var=26 __ext.79 var=26) exit (__ext.260)  <93>;
            (__vola.80 var=27 __vola.81 var=27) exit (__vola.261)  <94>;
            (__tmp_low.357 var=188 __tmp_low.358 var=188) exit (__tmp.296)  <544>;
            (__tmp_high.362 var=189 __tmp_high.363 var=189) exit (__apl_r_high.298)  <548>;
        } #13
    } #3 rng=[1,2147483647]
    #29 off=12 nxt=-2
    () sink (__ext.79)  <47>;
    () sink (__vola.81)  <49>;
    () void_ret_addr (__la.48)  <56>;
    () sink (__ct_0.248)  <321>;
    () sink (__ct_1.250)  <322>;
    (__R_SP.275 var=148 __sp.276 var=149) wr_res_reg (__wr___sp.336 __sp.271)  <340>;
    () sink (__sp.276)  <341>;
    (__wr___sp.336 var=154) __Pvoid_add___Pvoid_amod (__rd___sp.272 __ct_0S0.341)  <487>;
    (__ct_0S0.341 var=214) const ()  <518>;
} #1
0 : 'core_0_2';
----------
0 : (0,0:0,0);
----------

